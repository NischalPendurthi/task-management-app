// schema.prisma

generator client {
provider = "prisma-client-js"
}

datasource db {
provider = "postgresql"
url = env("POSTGRES_PRISMA_URL") // uses connection pooling
directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection

}

model Task {
  id          String    @id @default(cuid())
  title       String
  description String?
  dueDate     DateTime?
  priority    String
  status      String
  assignedTo  User?     @relation(fields: [assignedToId], references: [id])
  assignedToId String?
  tags        Tag[]
  attachments String[]
  project     Project?  @relation(fields: [projectId], references: [id])
  projectId   String?
}

model Project {
  id          String    @id @default(cuid())
  name        String
  description String?
  tasks       Task[]
  members     User[]
  startDate   DateTime?
  endDate     DateTime?
  status      String
}

model User {
  id             String    @id @default(cuid())
  username       String
  email          String    @unique
  password       String
  bio            String?
  role           String
  profilePicture String?
  tasksAssigned  Task[]
  projects       Project[]
  notifications  Notification[] 
}

model Tag {
  id    String @id @default(cuid())
  name  String
  color String?
  tasks Task[]
}

model Notification {
  id         String   @id @default(cuid())
  recipient  User     @relation(fields: [recipientId], references: [id])
  recipientId String
  message    String
  timestamp  DateTime @default(now())
  status     String
}

model Comment {
  id        String   @id @default(cuid())
  taskId    String
  userId    String
  content   String
  timestamp DateTime @default(now())
}
